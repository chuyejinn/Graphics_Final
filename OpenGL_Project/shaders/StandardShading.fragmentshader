#version 330 core

in vec2 UV;
in vec3 FragPos;
in vec3 Normal;

out vec4 color;

uniform sampler2D myTextureSampler;
uniform vec3 LightPosition_worldspace;

void main()
{
    vec3 LightColor = vec3(1.0, 1.0, 1.0); 
    vec3 LightDirection = normalize(LightPosition_worldspace - FragPos);
    float diff = max(dot(Normal, LightDirection), 0.0);
    vec4 textureColor = texture(myTextureSampler, UV);
    color = textureColor * vec4(LightColor * diff, 1.0);
}